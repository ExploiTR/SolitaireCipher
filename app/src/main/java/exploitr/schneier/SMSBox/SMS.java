package exploitr.schneier.SMSBox;

/*Copyright 2018 Pratim Majumder

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/

import android.annotation.TargetApi;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Build;
import android.telephony.SmsManager;
import android.telephony.SubscriptionManager;
import android.widget.Toast;

public class SMS {

    private static final String SMS_SENT = "SMS_SENT";
    private static SMS instance;
    private String phoneNumber, message;

    private SMS(String num, String msg) {
        phoneNumber = num;
        message = msg;
    }

    private SMS() {
    }

    public static SMS ready(String num, String msg) {
        if (instance != null && instance.phoneNumber != null && instance.message != null) {
            return instance;
        } else {
            instance = new SMS(num, msg);
            return instance;
        }
    }

    public static SMS ready() {
        if (instance != null) {
            return instance;
        } else {
            instance = new SMS();
            return instance;
        }
    }

    public boolean isMultiMode(Context context) {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP_MR1) {
            SubscriptionManager manager = SubscriptionManager.from(context);
            return manager.getActiveSubscriptionInfoCount() > 1;
        } else {
            return false;
        }
    }

    public void send(Context context) {
        PendingIntent santa = PendingIntent.getBroadcast(context, 0, new Intent(SMS_SENT), 0);
        context.registerReceiver(new SmsBroadcastReceiver(), new IntentFilter(SMS_SENT));
        SmsManager manager = SmsManager.getDefault();
        manager.sendTextMessage(phoneNumber, null, message, santa, null);
    }

    @TargetApi(Build.VERSION_CODES.LOLLIPOP_MR1)
    public void send(Context context, int subId) {
        PendingIntent santa = PendingIntent.getBroadcast(context, 0, new Intent(SMS_SENT), 0);
        context.registerReceiver(new SmsBroadcastReceiver(), new IntentFilter(SMS_SENT));
        SmsManager manager = SmsManager.getSmsManagerForSubscriptionId(subId);
        if (manager != null) {
            Toast.makeText(context, phoneNumber, Toast.LENGTH_SHORT).show();
            manager.sendTextMessage(phoneNumber, null, message, santa, null);
        } else {
            Toast.makeText(context, "SMS Sending Failed!", Toast.LENGTH_SHORT).show();
        }
    }

}
